C51 COMPILER V9.00   18B20                                                                 04/15/2018 12:36:39 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 18B20
OBJECT MODULE PLACED IN 18b20.OBJ
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE 18b20.c COMPACT BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"18b20.h"
   2          
   3          /*******************************************************************************
   4          * 函 数 名         : Delay1ms
   5          * 函数功能                 : 延时函数
   6          * 输    入         : 无
   7          * 输    出         : 无
   8          *******************************************************************************/
   9          
  10          void Delay1ms(uint xms)
  11          {
  12   1              while(--xms)
  13   1        {
  14   2              unsigned char i, j;
  15   2              _nop_();
  16   2              i = 11;
  17   2              j = 100;
  18   2              do
  19   2              {
  20   3                      while (--j);
  21   3              } while (--i);  
  22   2        }
  23   1      }
  24          
  25          /*******************************************************************************
  26          * 函 数 名         : Ds18b20Init
  27          * 函数功能                 : 初始化
  28          * 输    入         : 无
  29          * 输    出         : 初始化成功返回1，失败返回0
  30          *******************************************************************************/
  31          
  32          uchar Ds18b20Init()
  33          {
  34   1              uint i;
  35   1              DSPORT = 0;                      //将总线拉低480us~960us
  36   1              i = 700;        
  37   1              while(i--);//延时642us
  38   1              DSPORT = 1;                     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  39   1              i = 0;
  40   1              while(DSPORT)   //等待DS18B20拉低总线
  41   1              {
  42   2                      Delay1ms(1);
  43   2                      i++;
  44   2                      if(i>5)//等待>5MS
  45   2                      {
  46   3                              return 0;//初始化失败
  47   3                      }
  48   2              
  49   2              }
  50   1              return 1;//初始化成功
  51   1      }
  52          
  53          /*******************************************************************************
  54          * 函 数 名         : Ds18b20WriteByte
  55          * 函数功能                 : 向18B20写入一个字节
C51 COMPILER V9.00   18B20                                                                 04/15/2018 12:36:39 PAGE 2   

  56          * 输    入         : 无
  57          * 输    出         : 无
  58          *******************************************************************************/
  59          
  60          void Ds18b20WriteByte(uchar dat)
  61          {
  62   1              uint i, j;
  63   1      
  64   1              for(j=0; j<8; j++)
  65   1              {
  66   2                      DSPORT = 0;               //每写入一位数据之前先把总线拉低1us
  67   2                      i++;
  68   2                      DSPORT = dat & 0x01;  //然后写入一个数据，从最低位开始
  69   2                      i=60;
  70   2                      while(i--); //延时68us，持续时间最少60us
  71   2                      DSPORT = 1;     //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  72   2                      dat >>= 1;
  73   2              }
  74   1      }
  75          /*******************************************************************************
  76          * 函 数 名         : Ds18b20ReadByte
  77          * 函数功能                 : 读取一个字节
  78          * 输    入         : 无
  79          * 输    出         : 无
  80          *******************************************************************************/
  81          
  82          
  83          uchar Ds18b20ReadByte()
  84          {
  85   1              uchar byte, bi;
  86   1              uint i, j;      
  87   1              for(j=8; j>0; j--)
  88   1              {
  89   2                      DSPORT = 0;//先将总线拉低1us
  90   2                      i++;i++;i++;i++;
  91   2                      DSPORT = 1;//然后释放总线
  92   2                      i = 5;
  93   2                      while(i--);       //延时6us等待数据稳定
  94   2              
  95   2                      bi = DSPORT;     //读取数据，从最低位开始读取
  96   2                      /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  97   2                      byte = (byte >> 1) | (bi << 7);                                           
  98   2                      i = 40;         //读取完之后等待48us再接着读取下一个数
  99   2                      while(i--);
 100   2              }                               
 101   1              return byte;
 102   1      }
 103          /*******************************************************************************
 104          * 函 数 名         : Ds18b20ChangTemp
 105          * 函数功能                 : 让18b20开始转换温度
 106          * 输    入         : 无
 107          * 输    出         : 无
 108          *******************************************************************************/
 109          
 110          void  Ds18b20ChangTemp()
 111          {
 112   1              Ds18b20Init();
 113   1              Delay1ms(1);
 114   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令                
 115   1              Ds18b20WriteByte(0x44);     //温度转换命令
 116   1              //Delay1ms(100);        //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 117   1         
C51 COMPILER V9.00   18B20                                                                 04/15/2018 12:36:39 PAGE 3   

 118   1      }
 119          /*******************************************************************************
 120          * 函 数 名         : Ds18b20ReadTempCom
 121          * 函数功能                   : 发送读取温度命令
 122          * 输    入         : 无
 123          * 输    出         : 无
 124          *******************************************************************************/
 125          
 126          void  Ds18b20ReadTempCom()
 127          {       
 128   1      
 129   1              Ds18b20Init();
 130   1              Delay1ms(1);
 131   1              Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 132   1              Ds18b20WriteByte(0xbe);  //发送读取温度命令
 133   1      }
 134          /*******************************************************************************
 135          * 函 数 名         : Ds18b20ReadTemp
 136          * 函数功能                 : 读取温度
 137          * 输    入         : 无
 138          * 输    出         : 无
 139          *******************************************************************************/
 140          
 141          int Ds18b20ReadTemp()
 142          {
 143   1              int temp = 0;
 144   1              uchar tmh, tml;
 145   1      //      EA=0;
 146   1              Ds18b20ChangTemp();                             //先写入转换命令
 147   1              Ds18b20ReadTempCom();                   //然后等待转换完后发送读取温度命令
 148   1      //      EA=1;
 149   1              tml = Ds18b20ReadByte();                //读取温度值共16位，先读低字节
 150   1              tmh = Ds18b20ReadByte();                //再读高字节
 151   1              temp = tmh;
 152   1              temp <<= 8;
 153   1              temp |= tml;
 154   1              return temp;
 155   1      }
 156          
 157          float datapros(int temp)         
 158          {
 159   1              float tp,f_temp;
 160   1          int tempnum;  
 161   1              if(temp>2407)                           //当温度值为负数(第十一位到第十五位是1时)
 162   1              {
 163   2      
 164   2                      tempnum=~temp+1;
 165   2                      tp=tempnum*0.0625; //tp为真实温度
 166   2                      tempnum=tp*10+0.5;              
 167   2              }
 168   1              else
 169   1              {                       
 170   2                      tp=temp*0.0625;  //tp为真实温度
 171   2                      tempnum=tp*10+0.5;      
 172   2              }
 173   1              f_temp=tempnum; 
 174   1              return (f_temp*0.1);              
 175   1      }
 176          
 177          
 178          
 179                  
C51 COMPILER V9.00   18B20                                                                 04/15/2018 12:36:39 PAGE 4   

 180          
 181            
 182          
 183          
 184          
 185          
 186          
 187             
 188              
 189          
 190          
 191                    
 192          
 193          
 194          
 195          
 196          
 197          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    443    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      17
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
